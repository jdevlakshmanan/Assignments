public class MergeSort {
    
    public static void main(String[] args) {

        int[] array = {5, 2, 9, 1, 5, 6};
        
        System.out.println("Original Array:");
        printArray(array);
        
        mergeSort(array);
        
        System.out.println("\nSorted Array:");
        printArray(array);
    }
    
    public static void mergeSort(int[] arr) {
        if (arr == null || arr.length <= 1) {
            return;
        }
        
        // Call helper method to perform merge sort
        mergeSort(arr, 0, arr.length - 1);
    }
    
    private static void mergeSort(int[] arr, int left, int right) {
        if (left < right) {
            // Find the middle point to divide the array into two halves
            int middle = left + (right - left) / 2;
            
            // Recursively sort the first and second halves
            mergeSort(arr, left, middle);
            mergeSort(arr, middle + 1, right);
            
            // Merge the sorted halves
            merge(arr, left, middle, right);
        }
    }
    
    // Function to merge two subarrays of arr[]
    private static void merge(int[] arr, int left, int middle, int right) {

        // Sizes of the two subarrays to be merged
        int sizeLeft = middle - left + 1;
        int sizeRight = right - middle;
        
        // Create temporary arrays
        int[] leftArray = new int[sizeLeft];
        int[] rightArray = new int[sizeRight];
        
        // Copy data to temporary arrays
        for (int i = 0; i < sizeLeft; i++) {
            leftArray[i] = arr[left + i];
        }
        for (int j = 0; j < sizeRight; j++) {
            rightArray[j] = arr[middle + 1 + j];
        }
        
        // Merge the temporary arrays
        
        // Initial indices of left and right subarrays
        int i = 0, j = 0;
        
        // Initial index of merged subarray
        int k = left;
        
        while (i < sizeLeft && j < sizeRight) {
            if (leftArray[i] <= rightArray[j]) {
                arr[k] = leftArray[i];
                i++;
            } else {
                arr[k] = rightArray[j];
                j++;
            }
            k++;
        }
        
        // Copy remaining elements of leftArray[], if any
        while (i < sizeLeft) {
            arr[k] = leftArray[i];
            i++;
            k++;
        }
        
        // Copy remaining elements of rightArray[], if any
        while (j < sizeRight) {
            arr[k] = rightArray[j];
            j++;
            k++;
        }
    }
    
    public static void printArray(int[] arr) {
        for (int num : arr) {
            System.out.print(num + " ");
        }
        System.out.println();
    }
}
